package com.mycompany.prueba2_reproductormusical;

import java.awt.Image;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author telip
 */
public class addWIN extends javax.swing.JFrame {
    
    static File selectedFile = null;
    static File selectedImageFile = null;

    /**
     * Creates new form addWIN
     */
    public addWIN() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chooseMP3BTN = new javax.swing.JButton();
        songTitle = new javax.swing.JLabel();
        chooseImageBTN = new javax.swing.JButton();
        displayImage = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        songTitle1 = new javax.swing.JLabel();
        genreFIELD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chooseMP3BTN.setText("Choose mp3 File");
        chooseMP3BTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseMP3BTNActionPerformed(evt);
            }
        });

        songTitle.setText("Title:");

        chooseImageBTN.setText("Choose image");
        chooseImageBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseImageBTNActionPerformed(evt);
            }
        });

        displayImage.setText("Image here");

        jButton1.setText("ADD");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        songTitle1.setText("Genre:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(songTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseMP3BTN, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(chooseImageBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(songTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(genreFIELD)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(chooseMP3BTN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(songTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(songTitle1, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(genreFIELD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(displayImage, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chooseImageBTN))
                .addGap(31, 31, 31)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseMP3BTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseMP3BTNActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Archivos MP3", "mp3");
        fileChooser.setFileFilter(filter);

        int result =fileChooser.showOpenDialog(this);

        if (result ==JFileChooser.APPROVE_OPTION) {
            selectedFile = fileChooser.getSelectedFile();
            String fileName =selectedFile.getName();
            songTitle.setText("Title: "+fileName);
        }
    }//GEN-LAST:event_chooseMP3BTNActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (selectedFile !=null && selectedImageFile !=null) {
            agregarArchivoMP3();
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Please select both an MP3 file and an image.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chooseImageBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseImageBTNActionPerformed
         JFileChooser fileChooser =new JFileChooser();
        FileNameExtensionFilter filter =new FileNameExtensionFilter("Archivos Png o Jpeg", "png", "jpeg");
        fileChooser.setFileFilter(filter);
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            selectedImageFile =fileChooser.getSelectedFile();
            ImageIcon imageIcon = new ImageIcon(selectedImageFile.getPath());

            Image image =imageIcon.getImage().getScaledInstance(displayImage.getWidth(), displayImage.getHeight(), Image.SCALE_SMOOTH);

            displayImage.setIcon(new ImageIcon(image));
        }
    }//GEN-LAST:event_chooseImageBTNActionPerformed


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addWIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addWIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addWIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addWIN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addWIN().setVisible(true);
            }
        });
    }
    
    
    
    private void agregarArchivoMP3() {
        copyFileToSongsFolder(selectedFile);
        String title =selectedFile.getName();
        String genre =genreFIELD.getText();
        agregarCancion(title, selectedImageFile, genre);
    }
    
    private void copyFileToSongsFolder(File sourceFile) {
    File songs = new File("songs");
        if (!songs.exists()) {
            songs.mkdir();
        }

        File destinationFile =new File(songs, sourceFile.getName());

        try (InputStream in = new FileInputStream(sourceFile);
             OutputStream out =new FileOutputStream(destinationFile)) {
            byte[] buffer =new byte[1024];
            int length;
            while ((length =in.read(buffer)) > 0) {
                out.write(buffer, 0, length);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
}
    
    private void agregarCancion(String fileName, File imageFile, String genre) {
    ListModel<String> originalModel =Prueba2_ReproductorMusical.songList.getModel();
    DefaultListModel<String> listModel =new DefaultListModel<>();

    int size = originalModel.getSize();
    for (int i =0;i < size;i++) {
        listModel.addElement(originalModel.getElementAt(i));
    }

    MusicNode newNode = new MusicNode(fileName, imageFile, genre);
    String newNodeString = newNode.getFileName() +";;" + newNode.getImageFile().getPath() +";;" + newNode.getGenre();
    listModel.addElement(newNodeString);

    Prueba2_ReproductorMusical.songList.setModel(listModel);
    saveToPlaylistFile(newNodeString);
}
    
    private void saveToPlaylistFile(String newNodeString) {
    try (BufferedWriter writer =new BufferedWriter(new FileWriter("playlist.txt", true))) {
        writer.write(newNodeString);
        writer.newLine();
    } catch (IOException e) {
        e.printStackTrace();
    }
}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseImageBTN;
    private javax.swing.JButton chooseMP3BTN;
    private javax.swing.JLabel displayImage;
    private javax.swing.JTextField genreFIELD;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel songTitle;
    private javax.swing.JLabel songTitle1;
    // End of variables declaration//GEN-END:variables

static class MusicNode {
    public String fileName;
    private File imageFile;
    private String genre;

    public MusicNode(String fileName, File imageFile, String genre) {
        this.fileName = fileName;
        this.imageFile = imageFile;
        this.genre = genre;
    }

    public String getFileName() {
        return fileName;
    }

    public File getImageFile() {
        return imageFile;
    }

    public String getGenre() {
        return genre;
    }

    @Override
    public String toString() {
        return fileName;
    }
}

}
